pipeline{
    agent any
    environment{
        install="false"   
        DOCKER_USERNAME=credentials('DOCKER_USERNAME')
        DOCKER_PASSWORD=credentials('DOCKER_PASSWORD')
        DATABASE_URI = credentials('DATABASE_URI')
    }
    stages {
        stage('install requirements'){
            steps{
                script{
                    if(env.install=="true")
                    {
                      sh 'bash jenkins/install-requirements.sh'  
                    }
                }
            }
        }
        stage('test'){
            steps{
                //pytest
                //run for each service
                //produce cov reports
                sh 'bash jenkins/test.sh'
            }
        }
        stage('Build'){
            steps{
                // install docker and docker compose
                // docker-compose build
                sh 'docker-compose build --parallel'
            }
        }
        stage('Push') {
            steps{
                // install docker and docker compose
                //docker-compose push
                sh 'docker-compose push'
            }
        }
        stage('Configuration Management (Ansible)') {
            steps{
                
               // sh "bash ansible.sh "
                sh "ansible-playbook -i ansible/inventory.yaml ansible/playbook.yaml"
               // sh"echo config"
            }
        }
        stage('Deploy') {
            steps{  
               // create swarm infrasture 
                //copy over docker-compose.yaml
                //ssh:docker stack deploy --compose-file docker-compose.yaml lucky_prize
                sh 'bash jenkins/deploy.sh'
            }
        }
    }}